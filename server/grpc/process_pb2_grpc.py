# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import process_pb2 as process__pb2


class ProcessManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartProcess = channel.unary_unary(
                '/ProcessManager/StartProcess',
                request_serializer=process__pb2.ProcessRequest.SerializeToString,
                response_deserializer=process__pb2.ProcessResponse.FromString,
                )
        self.PauseProcess = channel.unary_unary(
                '/ProcessManager/PauseProcess',
                request_serializer=process__pb2.ProcessID.SerializeToString,
                response_deserializer=process__pb2.ProcessState.FromString,
                )
        self.ResumeProcess = channel.unary_unary(
                '/ProcessManager/ResumeProcess',
                request_serializer=process__pb2.ResumeRequest.SerializeToString,
                response_deserializer=process__pb2.ProcessResponse.FromString,
                )
        self.GetStatus = channel.unary_unary(
                '/ProcessManager/GetStatus',
                request_serializer=process__pb2.ProcessID.SerializeToString,
                response_deserializer=process__pb2.StatusResponse.FromString,
                )
        self.HealthCheck = channel.unary_unary(
                '/ProcessManager/HealthCheck',
                request_serializer=process__pb2.Empty.SerializeToString,
                response_deserializer=process__pb2.HealthResponse.FromString,
                )


class ProcessManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PauseProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ResumeProcess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProcessManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.StartProcess,
                    request_deserializer=process__pb2.ProcessRequest.FromString,
                    response_serializer=process__pb2.ProcessResponse.SerializeToString,
            ),
            'PauseProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.PauseProcess,
                    request_deserializer=process__pb2.ProcessID.FromString,
                    response_serializer=process__pb2.ProcessState.SerializeToString,
            ),
            'ResumeProcess': grpc.unary_unary_rpc_method_handler(
                    servicer.ResumeProcess,
                    request_deserializer=process__pb2.ResumeRequest.FromString,
                    response_serializer=process__pb2.ProcessResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=process__pb2.ProcessID.FromString,
                    response_serializer=process__pb2.StatusResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=process__pb2.Empty.FromString,
                    response_serializer=process__pb2.HealthResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ProcessManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProcessManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProcessManager/StartProcess',
            process__pb2.ProcessRequest.SerializeToString,
            process__pb2.ProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PauseProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProcessManager/PauseProcess',
            process__pb2.ProcessID.SerializeToString,
            process__pb2.ProcessState.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ResumeProcess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProcessManager/ResumeProcess',
            process__pb2.ResumeRequest.SerializeToString,
            process__pb2.ProcessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProcessManager/GetStatus',
            process__pb2.ProcessID.SerializeToString,
            process__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ProcessManager/HealthCheck',
            process__pb2.Empty.SerializeToString,
            process__pb2.HealthResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
